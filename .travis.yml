sudo: required
dist: trusty
os: linux
language: minimal
cache:
  directories:
  - depends/built
  - depends/sdk-sources
  - $HOME/.ccache
stages:
  - test
env:
  global:
    - MAKEJOBS=-j3
    - RUN_TESTS=false
    - CHECK_DOC=0
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - PYTHON_DEBUG=1
    - WINEDEBUG=fixme-all
before_install:
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
install:
    - if [ "$PYZMQ" = "true" ]; then pip install pyzmq --user ; fi
    - if [ -n "$PPA" ]; then travis_retry sudo add-apt-repository "$PPA" -y; fi
    - if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
before_script:
    - unset CC; unset CXX
    - if [ "$CHECK_DOC" = 1 ]; then contrib/devtools/check-doc.py; fi
    - mkdir -p depends/SDKs depends/sdk-sources
    - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
    - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
    - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make distdir PACKAGE=bitcoin VERSION=$HOST
    - cd bitcoin-$HOST
    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
    - if [ "$RUN_TESTS" = "true" ]; then make $MAKEJOBS check VERBOSE=1; fi
    #- if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi
after_script:
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG
jobs:
  include:
  # arm
  - stage: test
    name: arm
    env: >-
      HOST=arm-linux-gnueabihf
      PACKAGES="python3 g++-arm-linux-gnueabihf"
      CHECK_DOC=0
      GOAL="install"
      # -Wno-psabi is to disable ABI warnings: "note: parameter passing for argument of type ... changed in GCC 7.1"
      # This could be removed once the ABI change warning does not show up by default
      BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi"
  # win32
  - stage: test
    name: win32
    env: >-
      HOST=i686-w64-mingw32
      DPKG_ADD_ARCH="i386"
      DEP_OPTS="NO_QT=1"
      PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.6 bc"
      GOAL="install"
      BITCOIN_CONFIG="--enable-reduce-exports --disable-gui-tests"
  # win64
  - stage: test
    name: win64
    env: >-
      HOST=x86_64-w64-mingw32
      DPKG_ADD_ARCH="i386"
      DEP_OPTS="NO_QT=1"
      PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine1.6 bc"
      GOAL="install"
      BITCOIN_CONFIG="--enable-reduce-exports --disable-gui-tests"
  # linux32
  - stage: test
    name: linux32
    env: >-
      HOST=i686-pc-linux-gnu
      PACKAGES="g++-multilib bc python3-zmq"
      DEP_OPTS="NO_QT=1"
      GOAL="install"
      USE_SHELL="/bin/dash"
      PYZMQ=true
      BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++"
  # linux64
  - stage: test
    name: linux64
    env: >-
      HOST=x86_64-unknown-linux-gnu
      PACKAGES="bc python3-zmq"
      DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1"
      GOAL="install"
      PYZMQ=true
      BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER"
  # mac64
  - stage: test
    name: mac64
    env: >-
      HOST=x86_64-apple-darwin11
      PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git"
      OSX_SDK=10.11
      GOAL="deploy"
      BITCOIN_CONFIG="--enable-gui --enable-reduce-exports --enable-werror"
